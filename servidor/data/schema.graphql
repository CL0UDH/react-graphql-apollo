type Cliente {
    id: ID
    nombre: String
    apellido: String
    empresa: String
    emails: [Email]
    edad: Int
    tipo: TipoCliente
    pedidos: [Pedido]
}
type Email {
    email: String
}
type Pedido {
    producto: String
    precio: Int
}
enum TipoCliente {
    BASICO
    PREMIUM
}
type Query {
    getClientes(limite: Int, offset: Int): [Cliente]
    getCliente(id: ID): Cliente
    totalClientes: String
}
input EmailInput {
    email: String
}
input PedidoInput {
    producto: String
    precio: Int
}
""" Campos para clientes nuevos """
input ClienteInput {
    id: ID
    nombre: String!
    apellido: String!
    empresa: String!
    emails: [EmailInput]
    edad: Int!
    tipo: TipoCliente!
    pedidos: [PedidoInput]
}
""" Mutations para crear nuevos clientes """
type Mutation {
    # Nombre del Resolver, Input con datos y valor que retorna
    """ Te permite crear nuevos clientes """
    crearCliente(input: ClienteInput): Cliente

    """ Te permite actualizar clientes """
    actualizarCliente(input: ClienteInput): Cliente

    """ Te permite eliminar un cliente """
    eliminarCliente(id: ID!): String
}